{"version":3,"sources":["controllers/CalculationController.js"],"names":["System","register","_export2","_context2","setters","execute","_export","_context","CalculationService","DefaultCalculation","CalculationView","Bind","ListCalculations","Display","DisplayView","CalculationHelper","Calculation","_createClass","CalculationController","calculationController","_servicesCalculationService","_modelsDefaultCalculation","_viewsCalculationView","_helpersBind","_modelsListCalculations","_modelsDisplay","_viewsDisplayView","_helpersCalculationHelper","_modelsCalculation","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","instance","TypeError","_classCallCheck","this","$","document","querySelector","bind","_answered","_calculatorBody","_service","_calculationModel","_calculationView","_listCalculation","_listCalculationDirection","_display","expression","result","_init","value","_this","requestLocalCalculations","then","calculations","forEach","calculation","add","addEventListener","e","getCalculatorKeyByCode","keyCode","processKey","_this2","requestCalculations","allCalculations","filter","some","existentCalculation","isEquals","newCalculations","newCalculation","addToLast","addToCurrent","operation","splitExpression","operators","getOperators","res","Array","from","includes","operatorIndex","indexOf","parseFloat","splice","isNumber","validade","concludeCalculation","isCleaner","resetFields","incrementExpression","_this3","Date","postCalculation","toString","answer","calculate","defineResults","saveCalculation","_this4","clearCalculations","remove","sortByDate","toggleHistoryMode","get"],"mappings":"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","file":"CalculationController.js","sourcesContent":["'use strict';\n\nSystem.register([], function (_export2, _context2) {\n  \"use strict\";\n\n  return {\n    setters: [],\n    execute: function () {\n      System.register(['../services/CalculationService', '../models/DefaultCalculation', '../views/CalculationView', '../helpers/Bind', '../models/ListCalculations', '../models/Display', '../views/DisplayView', '../helpers/CalculationHelper', '../models/Calculation'], function (_export, _context) {\n        \"use strict\";\n\n        var CalculationService, DefaultCalculation, CalculationView, Bind, ListCalculations, Display, DisplayView, CalculationHelper, Calculation, _createClass, CalculationController, calculationController;\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        return {\n          setters: [function (_servicesCalculationService) {\n            CalculationService = _servicesCalculationService.CalculationService;\n          }, function (_modelsDefaultCalculation) {\n            DefaultCalculation = _modelsDefaultCalculation.DefaultCalculation;\n          }, function (_viewsCalculationView) {\n            CalculationView = _viewsCalculationView.CalculationView;\n          }, function (_helpersBind) {\n            Bind = _helpersBind.Bind;\n          }, function (_modelsListCalculations) {\n            ListCalculations = _modelsListCalculations.ListCalculations;\n          }, function (_modelsDisplay) {\n            Display = _modelsDisplay.Display;\n          }, function (_viewsDisplayView) {\n            DisplayView = _viewsDisplayView.DisplayView;\n          }, function (_helpersCalculationHelper) {\n            CalculationHelper = _helpersCalculationHelper.CalculationHelper;\n          }, function (_modelsCalculation) {\n            Calculation = _modelsCalculation.Calculation;\n          }],\n          execute: function () {\n            _createClass = function () {\n              function defineProperties(target, props) {\n                for (var i = 0; i < props.length; i++) {\n                  var descriptor = props[i];\n                  descriptor.enumerable = descriptor.enumerable || false;\n                  descriptor.configurable = true;\n                  if (\"value\" in descriptor) descriptor.writable = true;\n                  Object.defineProperty(target, descriptor.key, descriptor);\n                }\n              }\n\n              return function (Constructor, protoProps, staticProps) {\n                if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                if (staticProps) defineProperties(Constructor, staticProps);\n                return Constructor;\n              };\n            }();\n\n            CalculationController = function () {\n              function CalculationController() {\n                _classCallCheck(this, CalculationController);\n\n                var $ = document.querySelector.bind(document);\n                this._answered = false;\n                this._calculatorBody = $('[data-calc]');\n\n                this._service = new CalculationService();\n                this._calculationModel = new DefaultCalculation();\n                this._calculationView = new CalculationView($('[data-calc-history]'));\n\n                this._listCalculation = new Bind(new ListCalculations(), this._calculationView, 'add', 'remove', 'sortByDate');\n                this._listCalculationDirection = true;\n\n                this._display = new Bind(new Display(this._calculationModel.expression, this._calculationModel.result), new DisplayView($('[data-display]')), 'addToLast', 'addToCurrent');\n\n                this._init();\n              }\n\n              _createClass(CalculationController, [{\n                key: '_init',\n                value: function _init() {\n                  var _this = this;\n\n                  this._service.requestLocalCalculations().then(function (calculations) {\n                    return calculations.forEach(function (calculation) {\n                      return _this._listCalculation.add(calculation);\n                    });\n                  });\n\n                  document.addEventListener('keydown', function (e) {\n                    var key = CalculationHelper.getCalculatorKeyByCode(e.keyCode);\n                    if (key) _this.processKey(key);\n                  });\n                }\n              }, {\n                key: 'importCalculations',\n                value: function importCalculations() {\n                  var _this2 = this;\n\n                  this._service.requestCalculations().then(function (allCalculations) {\n                    return allCalculations.filter(function (calculation) {\n                      return !_this2._listCalculation.calculations.some(function (existentCalculation) {\n                        return calculation.isEquals(existentCalculation);\n                      });\n                    });\n                  }).then(function (newCalculations) {\n                    return newCalculations.forEach(function (newCalculation) {\n                      return _this2._listCalculation.add(newCalculation);\n                    });\n                  });\n                }\n              }, {\n                key: 'resetFields',\n                value: function resetFields() {\n                  this._calculationModel.expression = '';\n                  this._calculationModel.result = '';\n                  this._answered = false;\n                  this._display.addToLast(this._calculationModel.expression);\n                  this._display.addToCurrent(this._calculationModel.result);\n                }\n              }, {\n                key: 'incrementExpression',\n                value: function incrementExpression(key) {\n                  this._calculationModel.expression += key;\n                  this._display.addToCurrent(this._calculationModel.expression);\n                }\n              }, {\n                key: 'defineResults',\n                value: function defineResults(result) {\n                  this._calculationModel.result = result;\n                }\n              }, {\n                key: 'calculate',\n                value: function calculate() {\n                  var operation = CalculationHelper.splitExpression(this._calculationModel.expression);\n                  var operators = CalculationHelper.getOperators();\n                  var res = Array.from(operation);\n                  for (var i = 0; i < operators.length; i++) {\n                    while (res.includes(operators[i])) {\n                      var operatorIndex = res.indexOf(operators[i]);\n                      if (operators[i] === '/') {\n                        res[operatorIndex - 1] = parseFloat(res[operatorIndex - 1]) / parseFloat(res[operatorIndex + 1]);\n                      } else if (operators[i] === 'x') {\n                        res[operatorIndex - 1] = parseFloat(res[operatorIndex - 1]) * parseFloat(res[operatorIndex + 1]);\n                      } else if (operators[i] === '-') {\n                        res[operatorIndex - 1] = parseFloat(res[operatorIndex - 1]) - parseFloat(res[operatorIndex + 1]);\n                      } else if (operators[i] === '+') {\n                        res[operatorIndex - 1] = parseFloat(res[operatorIndex - 1]) + parseFloat(res[operatorIndex + 1]);\n                      }\n                      res.splice(operatorIndex, 2);\n                    }\n                  }\n\n                  return res[0];\n                }\n              }, {\n                key: 'processKey',\n                value: function processKey(key) {\n\n                  if (this._answered && CalculationHelper.isNumber(key)) this._calculationModel.expression = '';\n\n                  this._answered = false;\n\n                  if (CalculationHelper.isEquals(key) && !this._calculationModel.expression) return;\n\n                  if (!CalculationHelper.validade(key, this._calculationModel.expression)) return;\n\n                  if (CalculationHelper.isEquals(key)) {\n                    return this.concludeCalculation();\n                  }\n\n                  if (CalculationHelper.isCleaner(key)) return this.resetFields();\n\n                  this.incrementExpression(key);\n                }\n              }, {\n                key: 'saveCalculation',\n                value: function saveCalculation() {\n                  var _this3 = this;\n\n                  var calculation = new Calculation(new Date(), this._calculationModel.expression, this._calculationModel.result);\n\n                  this._service.postCalculation(calculation).then(function () {\n                    return _this3._listCalculation.add(calculation);\n                  });\n\n                  this._display.addToLast(this._calculationModel.expression);\n                  this._display.addToCurrent(this._calculationModel.result);\n\n                  this._answered = true;\n                  this._calculationModel.expression = this._calculationModel.result = calculation.result.toString();\n                }\n              }, {\n                key: 'concludeCalculation',\n                value: function concludeCalculation() {\n\n                  var answer = this.calculate();\n                  this.defineResults(answer);\n                  this.saveCalculation();\n                }\n              }, {\n                key: 'deleteCalculationHistory',\n                value: function deleteCalculationHistory() {\n                  var _this4 = this;\n\n                  this._service.clearCalculations().then(function () {\n                    return _this4._listCalculation.remove();\n                  });\n                }\n              }, {\n                key: 'orderCalculationHistory',\n                value: function orderCalculationHistory() {\n                  this._listCalculation.sortByDate(this._listCalculationDirection);\n                  this._listCalculationDirection = !this._listCalculationDirection;\n                }\n              }, {\n                key: 'toggleHistoryMode',\n                value: function toggleHistoryMode() {\n                  this._calculationView.toggleHistoryMode(this._calculatorBody);\n                }\n              }, {\n                key: 'expression',\n                get: function get() {\n                  return this._calculationModel.expression;\n                }\n              }, {\n                key: 'result',\n                get: function get() {\n                  return this._calculationModel.result;\n                }\n              }]);\n\n              return CalculationController;\n            }();\n\n            calculationController = new CalculationController();\n            function currentInstance() {\n\n              return calculationController;\n            }\n            _export('currentInstance', currentInstance);\n\n            ;\n          }\n        };\n      });\n    }\n  };\n});"]}