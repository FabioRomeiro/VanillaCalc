{"version":3,"sources":["helpers/CalculationHelper.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_generateMapKeys","keymap","/","type","order","codes","x","-","+","=","CE",".","H","cont","map","item","keyMap","CalculationHelper","this","Error","value","operators","operator","opInfo","getKeyInfo","expression","isOperator","last_digit","hasDecimal","isEquals","e","alert","operation","sliceIndex","push","slice","code","keys","find","includes","undefined"],"mappings":"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","file":"CalculationHelper.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _generateMapKeys() {\n\n  var keymap = {\n    '/': {\n      type: 'operator',\n      order: 0,\n      codes: [111, 191]\n    },\n    'x': {\n      type: 'operator',\n      order: 1,\n      codes: [88, 106]\n    },\n    '-': {\n      type: 'operator',\n      order: 2,\n      codes: [109, 189]\n    },\n    '+': {\n      type: 'operator',\n      order: 4,\n      codes: [107, 16 + 187]\n    },\n    '=': {\n      type: 'equals',\n      codes: [187, 13]\n    },\n    'CE': {\n      type: 'cleaner',\n      codes: [8]\n    },\n    '.': {\n      type: 'decimal',\n      codes: [110, 190, 188]\n    },\n    'H': {\n      type: 'command',\n      codes: [72]\n    }\n  };\n\n  var cont = [48, 96];\n  for (var i = 0; i < 10; i++) {\n    keymap[i] = {\n      type: 'number',\n      codes: [cont[0], cont[1]]\n    };\n    cont = cont.map(function (item) {\n      return item + 1;\n    });\n  }\n\n  return keymap;\n}\n\nvar keyMap = _generateMapKeys();\n\nvar CalculationHelper = function () {\n  function CalculationHelper() {\n    _classCallCheck(this, CalculationHelper);\n\n    throw new Error('Cannot instantiate CalculationHelper because it is a static class');\n  }\n\n  _createClass(CalculationHelper, null, [{\n    key: 'getOperators',\n    value: function getOperators() {\n\n      var operators = [];\n\n      for (var operator in keyMap) {\n        var opInfo = keyMap[operator];\n\n        if (opInfo.type === 'operator') operators[opInfo.order] = operator;\n      }\n\n      return operators;\n    }\n  }, {\n    key: 'isCommand',\n    value: function isCommand(key) {\n      return this.getKeyInfo(key).type === 'command';\n    }\n  }, {\n    key: 'isCleaner',\n    value: function isCleaner(key) {\n      return this.getKeyInfo(key).type === 'cleaner';\n    }\n  }, {\n    key: 'isEquals',\n    value: function isEquals(key) {\n      return this.getKeyInfo(key).type === 'equals';\n    }\n  }, {\n    key: 'isOperator',\n    value: function isOperator(key) {\n      return this.getKeyInfo(key).type === 'operator';\n    }\n  }, {\n    key: 'isNumber',\n    value: function isNumber(key) {\n      return this.getKeyInfo(key).type === 'number';\n    }\n  }, {\n    key: 'hasDecimal',\n    value: function hasDecimal(expression) {\n      for (var i = expression.length - 1; i > 0; i--) {\n        if (this.isOperator(expression[i])) break;else if (expression[i] === '.') return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'validade',\n    value: function validade(key, expression) {\n      var last_digit = expression[expression.length - 1];\n\n      try {\n        if (key === '.' && this.hasDecimal(expression)) {\n          throw new Error(\"This number is already a decimal\");\n        } else if (this.isEquals(key) && this.isOperator(last_digit)) {\n          throw new Error(\"The expression is missing a number to calculate\");\n        } else if (this.isOperator(key) && !expression) {\n          throw new Error(\"Cannot start a expression with an operator\");\n        } else if (this.isOperator(key) && this.isOperator(last_digit)) {\n          throw new Error(\"Cannot calculate a operator with another operator\");\n        }\n      } catch (e) {\n        alert(e);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: 'splitExpression',\n    value: function splitExpression(expression) {\n      var operation = [];\n      var sliceIndex = 0;\n\n      for (var i = 0; i < expression.length; i++) {\n        if (this.isOperator(expression[i]) && i !== 0) {\n          operation.push(expression.slice(sliceIndex, i));\n          operation.push(expression[i]);\n\n          sliceIndex = i + 1;\n        }\n        if (i == expression.length - 1) {\n          operation.push(expression.slice(sliceIndex, expression.length));\n        }\n      }\n\n      return operation;\n    }\n  }, {\n    key: 'getKeyInfo',\n    value: function getKeyInfo(key) {\n      return keyMap[key];\n    }\n  }, {\n    key: 'getCalculatorKeyByCode',\n    value: function getCalculatorKeyByCode(code) {\n      return Object.keys(keyMap).find(function (item) {\n        return keyMap[item].codes.includes(code);\n      }) || undefined;\n    }\n  }]);\n\n  return CalculationHelper;\n}();"]}