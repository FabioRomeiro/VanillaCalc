{"version":3,"sources":["views/CalculationView.js"],"names":["System","register","_export2","_context2","setters","execute","_export","_context","View","_createClass","CalculationView","_View2","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_View","element","instance","TypeError","_classCallCheck","this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","model","_this2","calculations","map","item","getDateTemplate","date","getTimeTemplate","expression","result","join","getDate","getMonth","getFullYear","getHours","getMinutes","calculator","className","classList","contains","remove","add"],"mappings":"AAAA,aAEAA,OAAOC,SAAS,GAAI,SAAUC,EAAUC,GAGpC,MAAO,CACHC,QAAS,GACTC,QAAS,WACLL,OAAOC,SAAS,CAAC,UAAW,SAAUK,EAASC,GAG3C,IAAIC,EAAMC,EAAcC,EAgCxB,MAAO,CACHN,QAAS,CAAC,SAAUO,GAChBH,EAAOG,EAAOH,OAElBH,QAAS,WACLI,EAAe,WACX,SAASG,EAAiBC,EAAQC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACnC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAItD,OAAO,SAAUO,EAAaC,EAAYC,GAGtC,OAFID,GAAYb,EAAiBY,EAAYG,UAAWF,GACpDC,GAAad,EAAiBY,EAAaE,GACxCF,GAdA,GAkBflB,EAAQ,kBAAmBI,EAAkB,SAAUkB,GAGnD,SAASlB,EAAgBmB,GAGrB,OA3DhB,SAAyBC,EAAUN,GAC/B,KAAMM,aAAoBN,GACtB,MAAM,IAAIO,UAAU,qCAuDZC,CAAgBC,KAAMvB,GAnDtC,SAAoCwB,EAAMC,GACtC,IAAKD,EACD,MAAM,IAAIE,eAAe,6DAG7B,OAAOD,GAAyB,iBAATA,GAAqC,mBAATA,EAA8BD,EAAPC,EAgDvDE,CAA2BJ,MAAOvB,EAAgB4B,WAAajB,OAAOkB,eAAe7B,IAAkByB,KAAKF,KAAMJ,IAmC7H,OAhFZ,SAAmBW,EAAUC,GACzB,GAA0B,mBAAfA,GAA4C,OAAfA,EACpC,MAAM,IAAIV,UAAU,kEAAoEU,GAG5FD,EAASb,UAAYN,OAAOqB,OAAOD,GAAcA,EAAWd,UAAW,CACnEgB,YAAa,CACTC,MAAOJ,EACPtB,YAAY,EACZE,UAAU,EACVD,cAAc,KAGlBsB,IAAYpB,OAAOwB,eAAiBxB,OAAOwB,eAAeL,EAAUC,GAAcD,EAASF,UAAYG,GA2BnGK,CAAUpC,EAyCZF,GAjCEC,EAAaC,EAAiB,CAAC,CAC3Ba,IAAK,WACLqB,MAAO,SAAkBG,GACrB,IAAIC,EAASf,KAEb,MAAO,+EAAiFc,EAAME,aAAaC,IAAI,SAAUC,GACrH,MAAO,4IAA8IH,EAAOI,gBAAgBD,EAAKE,MAAQ,MAAQL,EAAOM,gBAAgBH,EAAKE,MAAQ,oHAAsHF,EAAKI,WAAa,MAAQJ,EAAKK,OAAS,mFACpYC,KAAK,IAAM,kCAEnB,CACClC,IAAK,kBACLqB,MAAO,SAAyBS,GAC5B,OAAOA,EAAKK,UAAY,KAAOL,EAAKM,WAAa,GAAK,IAAMN,EAAKO,gBAEtE,CACCrC,IAAK,kBACLqB,MAAO,SAAyBS,GAC5B,OAAOA,EAAKQ,WAAa,IAAMR,EAAKS,eAEzC,CACCvC,IAAK,oBACLqB,MAAO,SAA2BmB,GAC9B,IAAIC,EAAY,mCAEhB,OAAID,EAAWE,UAAUC,SAASF,GACvBD,EAAWE,UAAUE,OAAOH,GAGhCD,EAAWE,UAAUG,IAAIJ,OAIjCtD,EAzCkC,IA4C7CJ,EAAQ,kBAAmBI","file":"CalculationView.js","sourcesContent":["'use strict';\n\nSystem.register([], function (_export2, _context2) {\n    \"use strict\";\n\n    return {\n        setters: [],\n        execute: function () {\n            System.register(['./View'], function (_export, _context) {\n                \"use strict\";\n\n                var View, _createClass, CalculationView;\n\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) {\n                        throw new TypeError(\"Cannot call a class as a function\");\n                    }\n                }\n\n                function _possibleConstructorReturn(self, call) {\n                    if (!self) {\n                        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                    }\n\n                    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n                }\n\n                function _inherits(subClass, superClass) {\n                    if (typeof superClass !== \"function\" && superClass !== null) {\n                        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                    }\n\n                    subClass.prototype = Object.create(superClass && superClass.prototype, {\n                        constructor: {\n                            value: subClass,\n                            enumerable: false,\n                            writable: true,\n                            configurable: true\n                        }\n                    });\n                    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n                }\n\n                return {\n                    setters: [function (_View2) {\n                        View = _View2.View;\n                    }],\n                    execute: function () {\n                        _createClass = function () {\n                            function defineProperties(target, props) {\n                                for (var i = 0; i < props.length; i++) {\n                                    var descriptor = props[i];\n                                    descriptor.enumerable = descriptor.enumerable || false;\n                                    descriptor.configurable = true;\n                                    if (\"value\" in descriptor) descriptor.writable = true;\n                                    Object.defineProperty(target, descriptor.key, descriptor);\n                                }\n                            }\n\n                            return function (Constructor, protoProps, staticProps) {\n                                if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                                if (staticProps) defineProperties(Constructor, staticProps);\n                                return Constructor;\n                            };\n                        }();\n\n                        _export('CalculationView', CalculationView = function (_View) {\n                            _inherits(CalculationView, _View);\n\n                            function CalculationView(element) {\n                                _classCallCheck(this, CalculationView);\n\n                                return _possibleConstructorReturn(this, (CalculationView.__proto__ || Object.getPrototypeOf(CalculationView)).call(this, element));\n                            }\n\n                            _createClass(CalculationView, [{\n                                key: 'template',\n                                value: function template(model) {\n                                    var _this2 = this;\n\n                                    return '\\n            <ul class=\"calculation-list\" data-calc-list>\\n                ' + model.calculations.map(function (item) {\n                                        return '\\n                    <li class=\"calculation-list__item\">\\n                        <span class=\"item-date\">\\n                            ' + _this2.getDateTemplate(item.date) + ' - ' + _this2.getTimeTemplate(item.date) + '\\n                        </span>\\n                        <span class=\"item-calc\">\\n                            ' + item.expression + ' = ' + item.result + '\\n                        </span>\\n                    </li>\\n                ';\n                                    }).join('') + '\\n            </ul>\\n        ';\n                                }\n                            }, {\n                                key: 'getDateTemplate',\n                                value: function getDateTemplate(date) {\n                                    return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n                                }\n                            }, {\n                                key: 'getTimeTemplate',\n                                value: function getTimeTemplate(date) {\n                                    return date.getHours() + ':' + date.getMinutes();\n                                }\n                            }, {\n                                key: 'toggleHistoryMode',\n                                value: function toggleHistoryMode(calculator) {\n                                    var className = 'vanilla-calculator--history-mode';\n\n                                    if (calculator.classList.contains(className)) {\n                                        return calculator.classList.remove(className);\n                                    }\n\n                                    return calculator.classList.add(className);\n                                }\n                            }]);\n\n                            return CalculationView;\n                        }(View));\n\n                        _export('CalculationView', CalculationView);\n                    }\n                };\n            });\n        }\n    };\n});"]}