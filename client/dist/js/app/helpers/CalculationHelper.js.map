{"version":3,"sources":["helpers/CalculationHelper.js"],"names":["System","register","_export2","_context2","setters","execute","_export","_context","_createClass","keyMap","CalculationHelper","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","keymap","/","type","order","codes","x","-","+","=","CE",".","H","cont","map","item","_generateMapKeys","instance","TypeError","_classCallCheck","this","Error","value","operators","operator","opInfo","getKeyInfo","expression","isOperator","last_digit","hasDecimal","isEquals","e","alert","operation","sliceIndex","push","slice","code","keys","find","includes","undefined"],"mappings":"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","file":"CalculationHelper.js","sourcesContent":["'use strict';\n\nSystem.register([], function (_export2, _context2) {\n  \"use strict\";\n\n  return {\n    setters: [],\n    execute: function () {\n      System.register([], function (_export, _context) {\n        \"use strict\";\n\n        var _createClass, keyMap, CalculationHelper;\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _generateMapKeys() {\n\n          var keymap = {\n            '/': {\n              type: 'operator',\n              order: 0,\n              codes: [111, 191]\n            },\n            'x': {\n              type: 'operator',\n              order: 1,\n              codes: [88, 106]\n            },\n            '-': {\n              type: 'operator',\n              order: 2,\n              codes: [109, 189]\n            },\n            '+': {\n              type: 'operator',\n              order: 4,\n              codes: [107, 16 + 187]\n            },\n            '=': {\n              type: 'equals',\n              codes: [187, 13]\n            },\n            'CE': {\n              type: 'cleaner',\n              codes: [8]\n            },\n            '.': {\n              type: 'decimal',\n              codes: [110, 190, 188]\n            },\n            'H': {\n              type: 'command',\n              codes: [72]\n            }\n          };\n\n          var cont = [48, 96];\n          for (var i = 0; i < 10; i++) {\n            keymap[i] = {\n              type: 'number',\n              codes: [cont[0], cont[1]]\n            };\n            cont = cont.map(function (item) {\n              return item + 1;\n            });\n          }\n\n          return keymap;\n        }\n\n        return {\n          setters: [],\n          execute: function () {\n            _createClass = function () {\n              function defineProperties(target, props) {\n                for (var i = 0; i < props.length; i++) {\n                  var descriptor = props[i];\n                  descriptor.enumerable = descriptor.enumerable || false;\n                  descriptor.configurable = true;\n                  if (\"value\" in descriptor) descriptor.writable = true;\n                  Object.defineProperty(target, descriptor.key, descriptor);\n                }\n              }\n\n              return function (Constructor, protoProps, staticProps) {\n                if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                if (staticProps) defineProperties(Constructor, staticProps);\n                return Constructor;\n              };\n            }();\n\n            keyMap = _generateMapKeys();\n\n            _export('CalculationHelper', CalculationHelper = function () {\n              function CalculationHelper() {\n                _classCallCheck(this, CalculationHelper);\n\n                throw new Error('Cannot instantiate CalculationHelper because it is a static class');\n              }\n\n              _createClass(CalculationHelper, null, [{\n                key: 'getOperators',\n                value: function getOperators() {\n\n                  var operators = [];\n\n                  for (var operator in keyMap) {\n                    var opInfo = keyMap[operator];\n\n                    if (opInfo.type === 'operator') operators[opInfo.order] = operator;\n                  }\n\n                  return operators;\n                }\n              }, {\n                key: 'isCommand',\n                value: function isCommand(key) {\n                  return this.getKeyInfo(key).type === 'command';\n                }\n              }, {\n                key: 'isCleaner',\n                value: function isCleaner(key) {\n                  return this.getKeyInfo(key).type === 'cleaner';\n                }\n              }, {\n                key: 'isEquals',\n                value: function isEquals(key) {\n                  return this.getKeyInfo(key).type === 'equals';\n                }\n              }, {\n                key: 'isOperator',\n                value: function isOperator(key) {\n                  return this.getKeyInfo(key).type === 'operator';\n                }\n              }, {\n                key: 'isNumber',\n                value: function isNumber(key) {\n                  return this.getKeyInfo(key).type === 'number';\n                }\n              }, {\n                key: 'hasDecimal',\n                value: function hasDecimal(expression) {\n                  for (var i = expression.length - 1; i > 0; i--) {\n                    if (this.isOperator(expression[i])) break;else if (expression[i] === '.') return true;\n                  }\n                  return false;\n                }\n              }, {\n                key: 'validade',\n                value: function validade(key, expression) {\n                  var last_digit = expression[expression.length - 1];\n\n                  try {\n                    if (key === '.' && this.hasDecimal(expression)) {\n                      throw new Error(\"This number is already a decimal\");\n                    } else if (this.isEquals(key) && this.isOperator(last_digit)) {\n                      throw new Error(\"The expression is missing a number to calculate\");\n                    } else if (this.isOperator(key) && !expression) {\n                      throw new Error(\"Cannot start a expression with an operator\");\n                    } else if (this.isOperator(key) && this.isOperator(last_digit)) {\n                      throw new Error(\"Cannot calculate a operator with another operator\");\n                    }\n                  } catch (e) {\n                    alert(e);\n                    return false;\n                  }\n\n                  return true;\n                }\n              }, {\n                key: 'splitExpression',\n                value: function splitExpression(expression) {\n                  var operation = [];\n                  var sliceIndex = 0;\n\n                  for (var i = 0; i < expression.length; i++) {\n                    if (this.isOperator(expression[i]) && i !== 0) {\n                      operation.push(expression.slice(sliceIndex, i));\n                      operation.push(expression[i]);\n\n                      sliceIndex = i + 1;\n                    }\n                    if (i == expression.length - 1) {\n                      operation.push(expression.slice(sliceIndex, expression.length));\n                    }\n                  }\n\n                  return operation;\n                }\n              }, {\n                key: 'getKeyInfo',\n                value: function getKeyInfo(key) {\n                  return keyMap[key];\n                }\n              }, {\n                key: 'getCalculatorKeyByCode',\n                value: function getCalculatorKeyByCode(code) {\n                  return Object.keys(keyMap).find(function (item) {\n                    return keyMap[item].codes.includes(code);\n                  }) || undefined;\n                }\n              }]);\n\n              return CalculationHelper;\n            }());\n\n            _export('CalculationHelper', CalculationHelper);\n          }\n        };\n      });\n    }\n  };\n});"]}