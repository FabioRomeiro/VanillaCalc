{"version":3,"sources":["services/ConnectionFactory.js"],"names":["System","register","_export2","_context2","setters","execute","_export","_context","_createClass","stores","connection","close","ConnectionFactory","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","instance","TypeError","_classCallCheck","this","Error","value","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","e","_createStores","result","onsuccess","bind","onerror","console","log","error","name","forEach","store","objectStoreNames","contains","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":"AAAA,aAEAA,OAAOC,SAAS,GAAI,SAAUC,EAAUC,GAGpC,MAAO,CACHC,QAAS,GACTC,QAAS,WACLL,OAAOC,SAAS,GAAI,SAAUK,EAASC,GAGnC,IAAIC,EAAcC,EAAyBC,EAAYC,EAAOC,EAQ9D,MAAO,CACHR,QAAS,GACTC,QAAS,WACLG,EAAe,WACX,SAASK,EAAiBC,EAAQC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACnC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAItD,OAAO,SAAUO,EAAaC,EAAYC,GAGtC,OAFID,GAAYb,EAAiBY,EAAYG,UAAWF,GACpDC,GAAad,EAAiBY,EAAaE,GACxCF,GAdA,GAkBfhB,EAAS,CAAC,gBACD,eACC,EAEVE,EADAD,EAAa,KAGbJ,EAAQ,oBAAqBM,EAAoB,WAC7C,SAASA,IAGL,MArChB,SAAyBiB,EAAUJ,GAC/B,KAAMI,aAAoBJ,GACtB,MAAM,IAAIK,UAAU,qCAiCZC,CAAgBC,KAAMpB,GAEhB,IAAIqB,MAAM,qEAyDpB,OAtDAzB,EAAaI,EAAmB,KAAM,CAAC,CACnCY,IAAK,gBACLU,MAAO,WACH,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAElC,IAAIC,EAAcC,OAAOC,UAAUC,KAjB1C,eACC,GAkBMH,EAAYI,gBAAkB,SAAUC,GACpC/B,EAAkBgC,cAAcD,EAAE7B,OAAO+B,SAG7CP,EAAYQ,UAAY,SAAUH,GAEzBjC,IAEDA,EAAaiC,EAAE7B,OAAO+B,OAEtBlC,EAAQD,EAAWC,MAAMoC,KAAKrC,GAC9BA,EAAWC,MAAQ,WACf,MAAM,IAAIsB,MAAM,kGAGxBG,EAAQ1B,IAGZ4B,EAAYU,QAAU,SAAUL,GAC5BM,QAAQC,IAAIP,EAAE7B,OAAOqC,OACrBd,EAAOM,EAAE7B,OAAOqC,MAAMC,WAInC,CACC5B,IAAK,gBACLU,MAAO,SAAuBxB,GAE1BD,EAAO4C,QAAQ,SAAUC,GACjB5C,EAAW6C,iBAAiBC,SAAS/C,IACrCC,EAAW+C,kBAAkBH,GAGjC5C,EAAWgD,kBAAkBJ,EAAO,CAAEK,eAAe,QAG9D,CACCnC,IAAK,kBACLU,MAAO,WACExB,IAGLC,IACAD,EAAa,UAIdE,EA7DsC,IAgEjDN,EAAQ,oBAAqBM","file":"ConnectionFactory.js","sourcesContent":["'use strict';\n\nSystem.register([], function (_export2, _context2) {\n    \"use strict\";\n\n    return {\n        setters: [],\n        execute: function () {\n            System.register([], function (_export, _context) {\n                \"use strict\";\n\n                var _createClass, stores, dbName, version, connection, close, ConnectionFactory;\n\n                function _classCallCheck(instance, Constructor) {\n                    if (!(instance instanceof Constructor)) {\n                        throw new TypeError(\"Cannot call a class as a function\");\n                    }\n                }\n\n                return {\n                    setters: [],\n                    execute: function () {\n                        _createClass = function () {\n                            function defineProperties(target, props) {\n                                for (var i = 0; i < props.length; i++) {\n                                    var descriptor = props[i];\n                                    descriptor.enumerable = descriptor.enumerable || false;\n                                    descriptor.configurable = true;\n                                    if (\"value\" in descriptor) descriptor.writable = true;\n                                    Object.defineProperty(target, descriptor.key, descriptor);\n                                }\n                            }\n\n                            return function (Constructor, protoProps, staticProps) {\n                                if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                                if (staticProps) defineProperties(Constructor, staticProps);\n                                return Constructor;\n                            };\n                        }();\n\n                        stores = ['calculations'];\n                        dbName = 'vanillaframe';\n                        version = 2;\n                        connection = null;\n                        close = null;\n\n                        _export('ConnectionFactory', ConnectionFactory = function () {\n                            function ConnectionFactory() {\n                                _classCallCheck(this, ConnectionFactory);\n\n                                throw new Error('Cannot instantiate ConnectionFactory because it is a static class');\n                            }\n\n                            _createClass(ConnectionFactory, null, [{\n                                key: 'getConnection',\n                                value: function getConnection() {\n                                    return new Promise(function (resolve, reject) {\n\n                                        var openRequest = window.indexedDB.open(dbName, version);\n\n                                        openRequest.onupgradeneeded = function (e) {\n                                            ConnectionFactory._createStores(e.target.result);\n                                        };\n\n                                        openRequest.onsuccess = function (e) {\n\n                                            if (!connection) {\n\n                                                connection = e.target.result;\n\n                                                close = connection.close.bind(connection);\n                                                connection.close = function () {\n                                                    throw new Error('You can only close the connection directly by the function ConnectionFactory.closeConnection');\n                                                };\n                                            }\n                                            resolve(connection);\n                                        };\n\n                                        openRequest.onerror = function (e) {\n                                            console.log(e.target.error);\n                                            reject(e.target.error.name);\n                                        };\n                                    });\n                                }\n                            }, {\n                                key: '_createStores',\n                                value: function _createStores(connection) {\n\n                                    stores.forEach(function (store) {\n                                        if (connection.objectStoreNames.contains(stores)) {\n                                            connection.deleteObjectStore(store);\n                                        }\n\n                                        connection.createObjectStore(store, { autoIncrement: true });\n                                    });\n                                }\n                            }, {\n                                key: 'closeConnection',\n                                value: function closeConnection() {\n                                    if (!connection) {\n                                        return;\n                                    }\n                                    close();\n                                    connection = null;\n                                }\n                            }]);\n\n                            return ConnectionFactory;\n                        }());\n\n                        _export('ConnectionFactory', ConnectionFactory);\n                    }\n                };\n            });\n        }\n    };\n});"]}